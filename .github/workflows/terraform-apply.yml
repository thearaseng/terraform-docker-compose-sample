name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "thearaseng"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "ec2-docker-compose"
  TF_WORKSPACE_ID: "ws-AY5MHL439YDkq8bz"
  CONFIG_DIRECTORY: "./terraform"

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Fetch Outputs
        run: |
          OUTPUTS_JSON=$(curl GET \
            -H "Authorization: Bearer $TF_API_TOKEN" \
            -H "Content-Type: application/json" \
            "https://app.terraform.io/api/v2/workspaces/$TF_WORKSPACE_ID/current-state-version-outputs")
          
          echo "Fetched Terraform Output: $OUTPUTS_JSON"
          
          WEB_ADDRESS=$(echo $OUTPUTS_JSON | jq -r '.data[] | select(.attributes.name == "web-address") | .attributes.value')
          echo "web address: $WEB_ADDRESS"
          echo WEB_ADDRESS=$WEB_ADDRESS >> $GITHUB_ENV

      - name: Test
        run: echo ${{ env.WEB_ADDRESS }}

      - name: Deploy to Docker compose
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ec2-user@${{ env.WEB_ADDRESS }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          stack_file_name: docker-compose.yaml
          args: my-app

      - name: Start Deployment
        uses: TapTap21/docker-remote-deployment-action@v1.0
        with:
          remote_docker_host: ec2-user@${{ env.WEB_ADDRESS }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          stack_file_name: docker-compose.yml
          args: -p myapp up -d